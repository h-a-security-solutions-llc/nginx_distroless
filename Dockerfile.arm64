# Builder stage to gather the required libraries
FROM nginxinc/nginx-unprivileged:stable-bookworm AS builder

# Prepare required libraries in /tmp/required_libs
RUN mkdir -p /tmp/required_libs && \
    find /lib/ -name libcrypt.so.1 -exec cp {} /tmp/required_libs/ \; && \
    find /lib/ -name libpcre2-8.so.0 -exec cp {} /tmp/required_libs/ \; && \
    find /lib/ -name libssl.so.3 -exec cp {} /tmp/required_libs/ \; && \
    find /lib/ -name libcrypto.so.3 -exec cp {} /tmp/required_libs/ \; && \
    find /lib/ -name libz.so.1.2.13 -exec cp {} /tmp/required_libs/ \;

# Platform-specific final stage for amd64
FROM gcr.io/distroless/base-debian12:nonroot AS final-amd64

# Copy required files to the amd64 destination directory
COPY --from=builder /tmp/required_libs /lib/x86_64-linux-gnu/

# Platform-specific final stage for arm64
FROM gcr.io/distroless/base-debian12:nonroot AS final-arm64

# Copy required files to the arm64 destination directory
COPY --from=builder /tmp/required_libs /lib/aarch64-linux-gnu/
# Base image for final runtime
FROM gcr.io/distroless/base-debian12:nonroot AS final

# Common files
COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx
COPY --from=builder /etc/nginx /etc/nginx
COPY --from=builder /usr/share/nginx/html /usr/share/nginx/html

# Cache and log directories with permissions
COPY --from=builder --chmod=777 /var/cache/nginx /var/cache/nginx
COPY --from=builder --chmod=777 /var/log/nginx /var/log/nginx

# Custom configuration files
COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY nginx/default.conf /etc/nginx/conf.d/default.conf

# HTML files
COPY webroot/50x.html /usr/share/nginx/html/50x.html
COPY webroot/index.html /usr/share/nginx/html/index.html

# Required libraries
COPY --from=builder /lib/aarch64-linux-gnu/libcrypt.so.1 \
    /lib/aarch64-linux-gnu/libpcre2-8.so.0 \
    /lib/aarch64-linux-gnu/libssl.so.3 \
    /lib/aarch64-linux-gnu/libcrypto.so.3 \
    /lib/aarch64-linux-gnu/libz.so.1 \
    /usr/lib/

# Set the user to run NGINX and expose the NGINX port
USER nonroot
EXPOSE 80

# Start NGINX
CMD ["/usr/sbin/nginx", "-g", "daemon off;"]
